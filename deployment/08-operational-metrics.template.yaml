AWSTemplateFormatVersion: '2010-09-09'
Description: (SO0103-operation-metrics) %%SOLUTION_NAME%% - This template deploys resources to collect operational metrics for %%SOLUTION_NAME%%.

Parameters:
  VPCResourceStack:
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: sftp-vpc-stack

  CognitoStackName:
    Type: String
    Description: The name of the parent Cognito stack that you created. Necessary
      to locate and reference resources created by that stack.
    Default: sftp-cognito-stack

  ECSStackName:
    Type: String
    Description: The name of the parent ECS Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.
    Default: sftp-ecs-stack

  SendAnonymousUsage:
    Type: String
    Description: Send operational metrics of this solution anonymously
    AllowedValues:
      - Yes
      - No
    Default: Yes # change to 'No' if needed

Conditions:
  CreateOperationsMetricsResources: !Equals
    - !Ref SendAnonymousUsage
    - Yes

Mappings:
  Send:
    SendAnonymousUsage:
      AllowedValues:
        - "Yes"
        - "No"
      Default: "Yes" # change to 'No' if needed
    Path:
      url: "https://metrics.awssolutionsbuilder.com/generic"
  Solution:
    General:
      ID: SO0103
      Version: "%%VERSION%%"
  SourceCode:
    General:
      S3Bucket: "%%BUCKET_NAME%%"
      KeyPrefix: "%%SOLUTION_NAME%%/%%VERSION%%"

Resources:
  OperationalMetricsLambdaExecutionRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "resource created after IAM role creation."
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecs:DescribeClusters
                  - cognito-idp:DescribeUserPool
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
                  - !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/*'
                  - !Sub 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*'
              - Effect: Allow
                Action:
                  - cloudwatch:GetMetricStatistics
                Resource: '*'

  CollectOperationalMetricsLambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "CW Logs permissions defined"
          - id: W89
            reason: "VPC configuration for Lambda not supported for this use case."
          - id: W92
            reason: "reserved concurrency not required for this use case."
          - id: W24
            reason: "approprate permissions are assigned to the role."
    Condition: CreateOperationsMetricsResources
    Properties:
      Handler: SendOperationalMetricsLambdaFunction.lambda_handler
      Runtime: python3.7
      Timeout: 60
      Role: !GetAtt OperationalMetricsLambdaExecutionRole.Arn
      Description: This function collects operational metrics of the solution on regular intervals
      Environment:
        Variables:
          solutionId: !FindInMap ["Solution", "General", "ID"]
          version: !FindInMap ["Solution", "General", "Version"]
          url: !FindInMap ["Send", "Path", "url"]
          metrics: !Ref SendAnonymousUsage
          STACK_ID:
            Fn::ImportValue: !Join [':', [!Ref 'VPCResourceStack', 'StackID']]
          ECSClusterName:
            Fn::ImportValue: !Join [':', [!Ref 'ECSStackName', 'ClusterName']]
          CognitoUserPoolId:
            Fn::ImportValue: !Join [':', [!Ref 'CognitoStackName', 'UserPoolId']]
          botoConfig: '{"user_agent_extra": "AwsSolution/SO0103/%%VERSION%%"}'
      Code:
        S3Bucket:
          !Join [
            "-",
            [
            !FindInMap ["SourceCode", "General", "S3Bucket"],
            Ref: "AWS::Region",
            ],
          ]
        S3Key:
          !Join [
            "/lambda/",
            [
            !FindInMap ["SourceCode", "General", "KeyPrefix"],
            "SendOperationalMetricsLambdaFunction.zip",
            ],
          ]

  CollectOperationalMetricsCWRule:
    Type: AWS::Events::Rule
    Condition: CreateOperationsMetricsResources
    Properties:
      Description: "Rule to trigger CollectOperationalMetricsLambdaFunction"
      Name:
        Fn::Join:
          - "-"
          - - "CollectOperationalMetricsCWRule"
            - Fn::ImportValue: !Join [':', [!Ref 'VPCResourceStack', 'StackID']]
      ScheduleExpression: "rate(12 hours)"
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "CollectOperationalMetricsLambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"

  CollectOperationalMetricsLambdaFunctionPermission:
    Type: AWS::Lambda::Permission
    Condition: CreateOperationsMetricsResources
    Properties:
      FunctionName: !Ref CollectOperationalMetricsLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - CollectOperationalMetricsCWRule
          - Arn